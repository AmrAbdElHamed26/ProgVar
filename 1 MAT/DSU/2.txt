struct  DSU {

	int par[N], size[N];
	ll summation[N];
	void init(int n) {
		for (int i = 0; i < n; i++) {
			par[i] = i, size[i] = 1;
			summation[i] = i;
		}
	}

	int find(int a) {
		if (par[a] == a)return a;
		return par[a] = find(par[a]);
	}

	void merge(int a, int b) {
		a = find(a);
		b = find(b);

		if (a == b)return;

		if (size[a] < size[b])swap(a, b);

		par[b] = a;
		summation[a] += summation[b];
		summation[b] += summation[a];
		size[a] += size[b];
		size[b] = 0 ;

	}

	int count(int a) {
		return size[find(a)];

	}

};